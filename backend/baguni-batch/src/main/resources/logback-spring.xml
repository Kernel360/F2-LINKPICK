<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="60 seconds">

    <!-- ````````````````````````````````````````````````` -->
    <!--                Conversion Rule                    -->
    <!-- ````````````````````````````````````````````````` -->
    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter"/>
    <conversionRule conversionWord="wex"
                    converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter"/>
    <conversionRule conversionWord="wEx"
                    converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter"/>

    <!-- ````````````````````````````````````````````````` -->
    <!--                PROPERTY SETTING                   -->
    <!-- ````````````````````````````````````````````````` -->

    <property name="CONSOLE_LOG_PATTERN"
              value="${CONSOLE_LOG_PATTERN:-%clr(%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}}){green} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"/>
    <property name="CONSOLE_LOG_CHARSET" value="${CONSOLE_LOG_CHARSET:-default}"/>

    <property name="LOG_PATH" value="logs"/> <!-- 로그 경로 (Logback 은 환경 번수 적용 불가) -->
    <property name="DATE_DIR" value="%d{yyyy-MM-dd}"/>

    <springProperty name="APPLICATION_NAME" source="spring.application.name"/>

    <!-- ````````````````````````````````````````````````` -->
    <!--                APPENDER SETTING                   -->
    <!-- ````````````````````````````````````````````````` -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
            <charset>${CONSOLE_LOG_CHARSET}</charset>
        </encoder>
    </appender>

    <!--  메트릭, 트레이스 뿐 아니라 log.info(...) 같이 로그로 찍은 데이터도 OTEL로 전송해야 한다. -->
    <appender name="OpenTelemetry" class="io.opentelemetry.instrumentation.logback.appender.v1_0.OpenTelemetryAppender"/>

    <!-- ````````````````````````````````````````````````` -->
    <!--                 Logger Setting                    -->
    <!-- ````````````````````````````````````````````````` -->
    <springProfile name="local">
        <logger name="org.hibernate.orm.jdbc.bind" level="trace" additivity="false"/> <!-- exclude from console -->
        <logger name="org.hibernate.SQL" level="debug" additivity="false"/> <!-- exclude from console -->
        <logger name="org.hibernate" level="debug" additivity="false">
            <appender-ref ref="CONSOLE"/>
        </logger>
        <root level="INFO">
            <appender-ref ref="CONSOLE"/>
        </root>
    </springProfile>

    <springProfile name="dev">
        <logger name="org.hibernate.orm.jdbc.bind" level="trace" additivity="false"/> <!-- exclude from console -->
        <logger name="org.hibernate.SQL" level="debug" additivity="false"/> <!-- exclude from console -->
        <logger name="p6spy" level="info" additivity="false">
            <appender-ref ref="CONSOLE"/>
        </logger>
        <logger name="org.hibernate" level="debug" additivity="false">
            <appender-ref ref="CONSOLE"/>
            <appender-ref ref="OpenTelemetry"/>
        </logger>
        <root level="INFO">
            <appender-ref ref="CONSOLE"/>
            <appender-ref ref="OpenTelemetry"/>
        </root>
    </springProfile>

    <springProfile name="prod">
        <logger name="org.hibernate.orm.jdbc.bind" level="trace" additivity="false"/> <!-- exclude query -->
        <logger name="org.hibernate.SQL" level="debug" additivity="false"/> <!-- exclude query -->
        <logger name="org.hibernate" level="debug" additivity="false">
            <appender-ref ref="CONSOLE"/>
            <appender-ref ref="OpenTelemetry"/>
        </logger>
        <root level="INFO">
            <appender-ref ref="CONSOLE"/>
            <appender-ref ref="OpenTelemetry"/>
        </root>
    </springProfile>

</configuration>